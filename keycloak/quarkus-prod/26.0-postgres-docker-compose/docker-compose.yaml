#version: '3'
volumes:
  postgres_data:
      driver: local
services:
  postgres:
      container_name: keycloak-db
      image: postgres:16
      env_file:
        - .env
      volumes:
        - ./postgres:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
        POSTGRES_USER: ${KEYCLOAK_DB_USER}
      networks:
        keycloak:
  keycloak:
      container_name: keycloak-server
      image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
      env_file:
        - .env
      environment:
        #KC_FEATURES: preview
        #KC_PROXY_ADDRESS_FORWARDING: true
        #KC_PROXY_PROTOCOL_ENABLED: true
        KC_PROXY_HEADERS: xforwarded
        KC_HOSTNAME_STRICT: false
        #KC_PROXY: edge
        KC_HTTP_ENABLED: true
        KC_DB: postgres
        KC_DB_URL: 'jdbc:postgresql://postgres:5432/keycloak?ssl=allow'
        KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
        KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
        #KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
        KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
        KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
        KC_HTTPS_CERTIFICATE_FILE: '/data/keycloak-server.crt.pem'
        KC_HTTPS_CERTIFICATE_KEY_FILE: '/data/keycloak-server.key.pem'
      entrypoint: /opt/keycloak/bin/kc.sh start
      volumes:
        - ./data:/data:rw
      #ports:
        #- 8080:8080
        #- 8443:8443
      depends_on:
        - postgres
      networks:
        my-main-net:
        keycloak:

networks:
  my-main-net:
    external: true
  keycloak:

#Note:
#Generate a self signed certificate in ./data folder
#openssl req -newkey rsa:2048 -nodes -keyout keycloak-server.key.pem -x509 -days 3650 -out keycloak-server.crt.pem
